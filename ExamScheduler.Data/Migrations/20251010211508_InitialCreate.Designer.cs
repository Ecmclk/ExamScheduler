// <auto-generated />
using ExamScheduler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamScheduler.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251010211508_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamScheduler.Models.Models.Bolumler", b =>
                {
                    b.Property<int>("BolumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BolumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolumId"));

                    b.Property<string>("BolumAd")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("BolumKod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("BolumId");

                    b.HasIndex(new[] { "BolumKod" }, "UQ__Bolumler__4BC8DE108A0D08B3")
                        .IsUnique();

                    b.ToTable("Bolumler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Dersler", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DersID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DersId"));

                    b.Property<int>("BolumId")
                        .HasColumnType("int")
                        .HasColumnName("BolumID");

                    b.Property<string>("DersAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DersKodu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DersTuru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OgretimGorevlisi")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<byte>("Sinif")
                        .HasColumnType("tinyint");

                    b.HasKey("DersId");

                    b.HasIndex("BolumId");

                    b.HasIndex(new[] { "DersKodu" }, "UQ__Dersler__9DCB30EF802CD853")
                        .IsUnique();

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Derslikler", b =>
                {
                    b.Property<int>("DerslikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DerslikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DerslikId"));

                    b.Property<int>("BolumId")
                        .HasColumnType("int")
                        .HasColumnName("BolumID");

                    b.Property<int>("BoyunaSira")
                        .HasColumnType("int");

                    b.Property<string>("DerslikAd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DerslikKod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EnineSira")
                        .HasColumnType("int");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<byte>("SiraYapisi")
                        .HasColumnType("tinyint");

                    b.HasKey("DerslikId");

                    b.HasIndex("BolumId");

                    b.HasIndex(new[] { "DerslikKod" }, "UQ__Derslikl__041E03CAADCAED8B")
                        .IsUnique();

                    b.HasIndex(new[] { "DerslikAd" }, "UQ__Derslikl__8E73FCE1D6CDC992")
                        .IsUnique();

                    b.ToTable("Derslikler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Kullanicilar", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KullaniciID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciId"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("Aktiflik")
                        .HasColumnType("bit");

                    b.Property<int?>("BolumId")
                        .HasColumnType("int")
                        .HasColumnName("BolumID");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<byte[]>("SifreHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("SifreSalt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)");

                    b.HasKey("KullaniciId");

                    b.HasIndex("BolumId");

                    b.HasIndex("RolId");

                    b.HasIndex(new[] { "Eposta" }, "UQ__Kullanic__03ABA3916F7CD1B2")
                        .IsUnique();

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.OgrenciDersler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DersId")
                        .HasColumnType("int")
                        .HasColumnName("DersID");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int")
                        .HasColumnName("OgrenciID");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("OgrenciDersler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Ogrenciler", b =>
                {
                    b.Property<int>("OgrenciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OgrenciID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgrenciId"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("BolumId")
                        .HasColumnType("int")
                        .HasColumnName("BolumID");

                    b.Property<string>("OgrenciNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("Sinif")
                        .HasColumnType("tinyint");

                    b.HasKey("OgrenciId");

                    b.HasIndex("BolumId");

                    b.HasIndex(new[] { "OgrenciNo" }, "UQ__Ogrencil__E497FE1A0D69C5B3")
                        .IsUnique();

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Roller", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("RolAd")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("RolId");

                    b.HasIndex(new[] { "RolAd" }, "UQ__Roller__F92343FA036F3BB5")
                        .IsUnique();

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Dersler", b =>
                {
                    b.HasOne("ExamScheduler.Models.Models.Bolumler", "Bolum")
                        .WithMany("Derslers")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Derslikler", b =>
                {
                    b.HasOne("ExamScheduler.Models.Models.Bolumler", "Bolum")
                        .WithMany("Dersliklers")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Kullanicilar", b =>
                {
                    b.HasOne("ExamScheduler.Models.Models.Bolumler", "Bolum")
                        .WithMany("Kullanicilars")
                        .HasForeignKey("BolumId");

                    b.HasOne("ExamScheduler.Models.Models.Roller", "Rol")
                        .WithMany("Kullanicilars")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.OgrenciDersler", b =>
                {
                    b.HasOne("ExamScheduler.Models.Models.Dersler", "Ders")
                        .WithMany("OgrenciDersler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamScheduler.Models.Models.Ogrenciler", "Ogrenci")
                        .WithMany("OgrenciDersler")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Ogrenciler", b =>
                {
                    b.HasOne("ExamScheduler.Models.Models.Bolumler", "Bolum")
                        .WithMany("Ogrencilers")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Bolumler", b =>
                {
                    b.Navigation("Derslers");

                    b.Navigation("Dersliklers");

                    b.Navigation("Kullanicilars");

                    b.Navigation("Ogrencilers");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Dersler", b =>
                {
                    b.Navigation("OgrenciDersler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Ogrenciler", b =>
                {
                    b.Navigation("OgrenciDersler");
                });

            modelBuilder.Entity("ExamScheduler.Models.Models.Roller", b =>
                {
                    b.Navigation("Kullanicilars");
                });
#pragma warning restore 612, 618
        }
    }
}
